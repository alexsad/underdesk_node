package ${classe.getPacote()}.${classe.getDominio().toLowerCase()}.dao;
#foreach ($import in $classe.getImports())
import $import;
#end
import ${classe.getPacote()}.${classe.getDominio().toLowerCase()}.model.${classe.getNome()};
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
/**
* @author alexandre.araujo
*/
@Repository
public class $classe.getNome()DAO{

${tab}@PersistenceContext()
${tab}private EntityManager manager;

${tab}public List<$classe.getNome()> get() {		
${tab}${tab}return manager.createQuery("From ${classe.getNome()} ${classe.getNomeAlias()} order by ${classe.getNomeAlias()}.${classe.getPrimaryKey().getColuna()} desc",${classe.getNome()}.class).getResultList();
${tab}}

${tab}public ${classe.getNome()} getBy${classe.getPrimaryKey().getColunaCapitalize()}($classe.getPrimaryKey().getTipo() $classe.getPrimaryKey().getColuna()){
${tab}${tab}return manager.find(${classe.getNome()}.class,$classe.getPrimaryKey().getColuna());
${tab}}

#if ($classe.getTipo()!="view")
${tab}@Transactional
${tab}public boolean insert($classe.getNome() $classe.getNomeAlias()){
${tab}${tab}manager.persist($classe.getNomeAlias());
${tab}${tab}return true;
${tab}}
${tab}@Transactional
${tab}public boolean update($classe.getNome() $classe.getNomeAlias()){
${tab}${tab}manager.merge($classe.getNomeAlias());
${tab}${tab}return true;
${tab}}
${tab}@Transactional
${tab}public boolean delete($classe.getPrimaryKey().getTipo() $classe.getPrimaryKey().getColuna()){
${tab}${tab}$classe.getNome() $classe.getNomeAlias() = manager.find(${classe.getNome()}.class,$classe.getPrimaryKey().getColuna());
${tab}${tab}manager.remove($classe.getNomeAlias());		
${tab}${tab}return true;
${tab}}
#end    
}