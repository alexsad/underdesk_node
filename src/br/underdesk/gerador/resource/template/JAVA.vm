package ${classe.getPacote()}.${classe.getDominio().toLowerCase()}.model;

import javax.persistence.Entity;
import javax.persistence.Column;
import javax.persistence.Id;
#if($classe.getTipo()=="view")
import org.hibernate.annotations.Immutable;
import org.hibernate.annotations.Subselect;
#elseif($classe.getTipo()=="table")	
#if($classe.getTpGeracao()=="increment")
import org.hibernate.annotations.GenericGenerator;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
#end
import javax.persistence.Table;
#end
#foreach ($import in $classe.getImports())
	import $import;
#end

#if($classe.getTipo()=="table")
@Entity
@Table(name="${classe.getNomeLogical()}")
#elseif($classe.getTipo()=="view")	
@Entity(name="${classe.getNomeLogical()}")
@Immutable
@Subselect("SELECT "+
#foreach ($campo in $classe.getAllCampos())	
	+" $classe.getNomeAlias().$campo.getColunaLogical(), "
#end
	+" FROM $classe.getNomeLogical() $classe.getNomeAlias() ")
#end
public class $classe.getNome(){

${tab}@Id 
${tab}@Column(name="${classe.getPrimaryKey().getColunaLogical()}")
#if($classe.getTipo()=="table")	
#if($classe.getTpGeracao()=="increment")
${tab}@GenericGenerator(name="seq_${classe.getNomeLogical().toLowerCase()}" , strategy="increment")
${tab}@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="seq_${classe.getNomeLogical().toLowerCase()}")
#end
#end
${tab}private $classe.getPrimaryKey().getTipoSimple() $classe.getPrimaryKey().getColuna();	
#foreach ($campo in $classe.getAllCampos())	
#if($campo.getColuna()!=$classe.getPrimaryKey().getColuna())
${tab}@Column(name="$campo.getColunaLogical()")	
${tab}private $campo.getTipo() $campo.getColuna();
#end
#end

${tab}public $classe.getNome()(){
${tab}${tab}super();
${tab}}
	
#foreach ($campo in $classe.getAllCampos())	
${tab}public $campo.getTipo() get$campo.getColunaCapitalize()(){
${tab}${tab}return this.$campo.getColuna();
${tab}}
${tab}public void set$campo.getColunaCapitalize()($campo.getTipo() $campo.getColuna()){
${tab}${tab}this.$campo.getColuna() = $campo.getColuna();
${tab}}	
#end
}