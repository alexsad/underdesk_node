package ${classe.getPacote()}.${classe.getDominio().toLowerCase()}.business;
#foreach ($import in $classe.getImports())
import $import;
#end
import ${classe.getPacote()}.${classe.getDominio().toLowerCase()}.model.${classe.getNome()};
import ${classe.getPacote()}.${classe.getDominio().toLowerCase()}.dao.${classe.getNome()}DAO;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
/**
 * @author alexandre.araujo
 */
@RestController
@RequestMapping("/${classe.getDominio().toLowerCase()}/${classe.getNome().toLowerCase()}/")
public class ${classe.getNome()}BLL{
${tab}@Autowired
${tab}private ${classe.getNome()}DAO dao = null;
${tab}@RequestMapping( method = RequestMethod.GET,headers="Accept=application/json")
${tab}public List<$classe.getNome()> get(){
${tab}${tab}return this.dao.get();
${tab}}
${tab}@RequestMapping(value = "/{${classe.getPrimaryKey().getColuna()}}", method = RequestMethod.GET,headers="Accept=application/json")    
${tab}public ${classe.getNome()} getBy${classe.getPrimaryKey().getColunaCapitalize()}(@PathVariable $classe.getPrimaryKey().getTipo() $classe.getPrimaryKey().getColuna()){
${tab}${tab}return this.dao.getBy$classe.getPrimaryKey().getColunaCapitalize()($classe.getPrimaryKey().getColuna());
${tab}}

#if ($classe.getTipo()!="view")

${tab}@RequestMapping(method = RequestMethod.POST,headers="Accept=application/json")
${tab}public int insert(@RequestBody $classe.getNome() $classe.getNomeAlias()){
${tab}${tab}if(this.dao.insert($classe.getNomeAlias())){
${tab}${tab}${tab}return ${classe.getNomeAlias()}.get${classe.getPrimaryKey().getColunaCapitalize()}();
${tab}${tab}}
${tab}${tab}return 0;
${tab}}

${tab}@RequestMapping(method = RequestMethod.PUT,headers="Accept=application/json")
${tab}public boolean update(@RequestBody $classe.getNome() $classe.getNomeAlias()){
${tab}${tab}return this.dao.update($classe.getNomeAlias());
${tab}}

${tab}@RequestMapping(value = "/{${classe.getPrimaryKey().getColuna()}}",method = RequestMethod.DELETE,headers="Accept=application/json")
${tab}public boolean delete(@PathVariable int ${classe.getPrimaryKey().getColuna()}){	
${tab}${tab}return this.dao.delete(${classe.getPrimaryKey().getColuna()});
${tab}}    
      
#end    
}
