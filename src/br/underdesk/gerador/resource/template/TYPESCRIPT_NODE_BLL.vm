#set( $classname = ${classe.dsTabela.toCamelCase().toCapitalCase()} )

import server = require('../../../../service/RestServer');
import {Get,Post,Put,Delete,Controller} from "../../../../lib/router/router";
import ${classname}AR = require("../model/${classname}AR");
import {I${classname}} from "../model/I${classname}";

@Controller()
class ${classname}{
	@Get()
	get(req:server.Request,res:server.Response):void{
		${classname}AR.findAllAssoc({
			order: [['id','DESC']]
			}).then((dta:I${classname}[])=>res.json(dta))
				.catch((err: any)=>(res.status(400),res.json(err)));
	}

	@Post()
	add(req:server.Request,res:server.Response):void{
		var n${classname.toLowerCase()}:I${classname} = <I${classname}>req.body;
		${classname}AR.create(n${classname.toLowerCase()}).then(
			function(p_n${classname.toLowerCase()}:I${classname}){
					${classname}AR
							.findByIdAssoc(p_n${classname.toLowerCase()}.id)
							.then((resp:I${classname})=> res.json(resp))
							.catch((err: any)=>(res.status(400),res.json(err)));

			}
		).catch((err: any)=>(res.status(400),res.json(err)));
	}


	@Put()
	atualizar(req:server.Request,res:server.Response):void{
		var n${classname.toLowerCase()}: I${classname} = <I${classname}>req.body;
		${classname}AR.upsert(n${classname.toLowerCase()}).then(function() {
			${classname}AR.findByIdAssoc(n${classname.toLowerCase()}.id)
																 .then((resp:I${classname})=>res.send(resp))
																 .catch((err: any)=>(res.status(400), res.json(err)));
		}).catch((err: any)=>(res.status(400),res.json(err)));
	}


	@Delete("/:_id")
	delete(req:server.Request,res:server.Response):void{
		${classname}AR.destroy({
			where: {
				id:req.params._id
			}
		}).then(() => res.json(true))
	    .catch((err: any)=>(res.status(400),res.json(err)));
	}

}
